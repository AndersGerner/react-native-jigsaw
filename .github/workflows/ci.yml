name: Build, Test and Publish @draftbit/ui

on:
  push:
    branches:
      - master
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      # With lerna/workspaces, the cache is at the monorepo level.
      - name: Restore node_modules cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit`
        with:
          path: "node_modules"
          key: node_modules-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Type Check
        run: yarn typescript

      - name: Lint
        run: yarn lint && yarn prettier --check .

      - name: Test
        run: yarn test

      - name: Build
        run: yarn lerna run prepare

      - name: Test collector script
        working-directory: packages/ui
        run: |
          npx json-server --port 3001 mock-backend.json & export JSON_SERVER_PID=$!;
          sleep 2;
          node scripts/collector.js;
          kill $JSON_SERVER_PID;
          [[ $(jq '.components | length' mock-backend.json) > 0 ]] || exit 1;

      # Avoiding lerna commands in favor of manual process for now
      - name: Release next /ui package
        working-directory: packages/ui
        if: github.event_name == 'pull_request'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JIGSAW_AUTH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm version prerelease --preid rc$(git rev-parse --short HEAD) -no-git-tag-version
          npm publish --access public --tag next --verbose

      - name: Release /ui package
        if: github.event_name != 'pull_request'
        working-directory: packages/ui
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JIGSAW_AUTH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm publish --access public

      - name: Release next /web package
        if: github.event_name == 'pull_request'
        working-directory: packages/web
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JIGSAW_AUTH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm version prerelease --preid rc$(git rev-parse --short HEAD) -no-git-tag-version
          npm publish --access public --tag next --verbose

      - name: Release next /web package
        if: github.event_name != 'pull_request'
        working-directory: packages/web
        env:
          NODE_AUTH_TOKEN: ${{ secrets.JIGSAW_AUTH_TOKEN }}
        run: |
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm publish --access public
